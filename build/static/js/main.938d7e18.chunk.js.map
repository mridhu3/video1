{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","HomeText","TextForm","useState","text","setText","placeholder","value","onChange","event","console","log","target","rows","onClick","newText","toUpperCase","toLowerCase","document","getElementById","navigator","clipboard","writeText","split","length","App","AboutText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2LAEe,SAASA,EAAOC,GAC3B,OACE,mCACE,qBAAKC,UAAU,8CAAf,SACJ,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SAAsCF,EAAMG,QAC5C,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,SACE,oBAAIJ,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,SAA6DF,EAAMM,wB,WCZhE,SAASC,IACtB,IAuBA,EAAuBC,mBAAS,mBAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACE,OAEI,qCACA,sBAAKT,UAAU,YAAf,UACE,oBAAIA,UAAU,yBAAd,mCACF,qBAAKA,UAAU,OAAf,SAEN,0BAAUA,UAAU,oBAAoBU,YAAY,kBAAkBC,MAAOH,EAAMI,SAb9D,SAACC,GACpBC,QAAQC,IAAI,aACZN,EAAQI,EAAMG,OAAOL,QAWsFP,GAAG,SAASa,KAAK,QAGhI,wBAAQd,KAAK,SAASH,UAAU,kBAAmBkB,QAlC7B,WACnB,IAAIC,EAAUX,EAAKY,cAClBX,EAAQU,IAgCZ,kCACA,wBAAQhB,KAAK,SAASH,UAAU,uBAAwBkB,QA/BlC,WAClB,IAAIC,EAAUX,EAAKa,cAClBZ,EAAQU,IA6Bb,kCACA,wBAAQhB,KAAK,SAASH,UAAU,uBAAwBkB,QA5BjC,WAElBT,EADa,KA2BlB,mBACA,wBAAQN,KAAK,SAASH,UAAU,uBAAwBkB,QAzBjC,WACpB,IAAIC,EAAUG,SAASC,eAAe,UAEtCC,UAAUC,UAAUC,UAAUP,EAAQR,QAsBzC,qBAGO,sBAAKX,UAAU,YAAf,UACE,mDACA,8BAAIQ,EAAKmB,MAAM,KAAKC,OAApB,cAAuCpB,EAAKoB,OAA5C,wBCxBMC,MAdf,WACE,OACE,qCACA,cAAC/B,EAAD,CAAQI,MAAM,cAAcG,SAAS,OAAOyB,UAAU,UACtD,qBAAK9B,UAAU,YAAf,SAEE,cAACM,EAAD,UCDSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,SAM1BQ,K","file":"static/js/main.938d7e18.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.HomeText}</a>\r\n          </li>\r\n         \r\n          </ul>\r\n        \r\n      </div>\r\n    </div>\r\n  </nav>\r\n  </>\r\n    )\r\n}\r\n","import React , {useState} from 'react'\r\n\r\nexport default function TextForm() {\r\n  const handleUpClick=()=>{\r\n   let newText = text.toUpperCase()\r\n    setText(newText)\r\n  }\r\n  const handleLoClick=()=>{ \r\n    let newText = text.toLowerCase();\r\n     setText(newText)\r\n   }\r\n   const handleCeClick=()=>{\r\n    let newText = ''\r\n     setText(newText)\r\n   }\r\n   const handleCoClick=()=>{\r\n   let newText = document.getElementById(\"myText\");\r\n   \r\n   navigator.clipboard.writeText(newText.value)\r\n   }\r\n\r\n  const handleOnChange=(event)=>{\r\n    console.log('on change')\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const [text,setText] = useState('Enter Text here');\r\n    return (\r\n    \r\n        <>\r\n        <div className=\"container\">\r\n          <h1 className=\"container-heading my-4\">Enter Text To Analyze</h1>\r\n        <div className=\"mb-3\">\r\n  \r\n  <textarea className=\"form-control my-3\" placeholder='Enter text here' value={text} onChange={handleOnChange} id=\"myText\" rows=\"8\"></textarea>\r\n  \r\n</div>\r\n<button type=\"button\" className=\"btn btn-primary\"  onClick={handleUpClick} >Convert To Uppercase</button>\r\n<button type=\"button\" className=\"btn btn-primary mx-3\"  onClick={handleLoClick} >Convert To Lowercase</button>\r\n<button type=\"button\" className=\"btn btn-primary mx-3\"  onClick={handleCeClick} >Clear</button>\r\n<button type=\"button\" className=\"btn btn-primary mx-3\"  onClick={handleCoClick} >Copy</button>\r\n        </div>\r\n\r\n       <div className=\"container\">\r\n         <h1>Your Text summary</h1>\r\n         <p>{text.split(\" \").length} words and {text.length} Characters </p>\r\n       </div>\r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'\n\n\n\nfunction App() {\n  return (\n    <>\n    <Navbar title=\"TextChanger\" HomeText=\"Home\" AboutText=\"About\" />\n    <div className=\"container\">\n      \n      <TextForm/>\n    </div>\n    </>\n    \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}